Option Public
Option Declare
Use "libLog"
'Redirects all logging to status bar (to "log.nsf" if runs on server)
'To log additionally in "log.nsf" when runs on client - set "notes.ini" variable "LogStatusBar=1"
'To redirect logging to a file use "notes.ini" variable "Debug_Outfile=c:\temp\StatusBarLogging.txt"
'https://www.ibm.com/support/knowledgecenter/SSKTMJ_8.5.3/com.ibm.help.domino.admin85.doc/H_WRITING_STATUS_BAR_HISTORY_TO_A_LOG_FILE_STEPS.html
Class LoggerPrint As Logger
	'------------------------------
	Sub assert( msg As String, id As DynamicArguments )
		Call me.output( {[ASSERT]     } & me.getModuleName( id ) & msg )
	End Sub
	'------------------------------
	Sub Error( msg As String, id As DynamicArguments )
		Call me.output( {[ERROR]      } & me.getModuleName( id ) & msg )
	End Sub
	'------------------------------
	Sub warn( msg As String, id As DynamicArguments )
		Call me.output( {[WARN]        } & me.getModuleName( id ) & msg )
	End Sub
	'------------------------------
	Sub info( msg As String, id As DynamicArguments )
		Call me.output( {[INFO]           } & me.getModuleName( id ) & msg )
	End Sub
	'------------------------------
	Sub debug( msg As String, id As DynamicArguments )
		Call me.output( {[DEBUG]      } & me.getModuleName( id ) & msg )
	End Sub
	'------------------------------
	Sub verbose( msg As String, id As DynamicArguments )
		Call me.output( {[VERBOSE] } & me.getModuleName( id ) & msg )
	End Sub
	'------------------------------
	Private Sub Output( msg As String )
		Print CStr(Now()) & { } & msg
	End Sub
	'------------------------------
	Private Function getModuleName( id As DynamicArguments ) As String
		getModuleName = {[} & id.toString( {->} ) & {] }
	End Function
	'------------------------------
End Class
Sub libLoggerPrint_init()
	registerModule "libLoggerPrint"
End Sub
